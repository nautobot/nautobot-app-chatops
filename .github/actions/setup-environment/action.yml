name: "Setup the environment"
description: "This action setup the Poetry environment and load virtual environment from cache if cache exists."
outputs:
  cache-used:
    description: "The property that defines if cache was used"
    value: "${{ steps.cached-poetry.outputs.cache-hit }}"
runs:
  using: "composite"
  steps:
    - name: "Set up Python"
      uses: "actions/setup-python@v2"
      with:
        python-version: "3.9"
    - name: "Install Poetry"
      run: "pip install poetry"
      shell: "bash"
    - name: "Cache"
      uses: "actions/cache@v2"
      id: "cached-poetry"
      with:
        path: "~/.cache/pypoetry/virtualenvs/"
        key: "{{ runner.os }}-poetry-${{ hashFiles('./poetry.lock') }}"
    # - name: "Install environment"
    #   if: "steps.cached-poetry.outputs.cache-hit != 'true'"
    #   run: "poetry install"
    #   shell: bash


    # - run: echo Hello ${{ inputs.who-to-greet }}.
    #   shell: bash
    # - id: random-number-generator
    #   run: echo "::set-output name=random-id::$(echo $RANDOM)"
    #   shell: bash
# name: 'Hello World'
# description: 'Greet someone'
# inputs:
#   who-to-greet:  # id of input
#     description: 'Who to greet'
#     required: true
#     default: 'World'
# outputs:
#   random-number:
#     description: "Random number"
#     value: ${{ steps.random-number-generator.outputs.random-id }}
# runs:
#   using: "composite"
#   steps:
#     - run: echo Hello ${{ inputs.who-to-greet }}.
#       shell: bash
#     - id: random-number-generator
#       run: echo "::set-output name=random-id::$(echo $RANDOM)"
#       shell: bash
